package com.easy.query.test.mssqlrownumber.entity.proxy;

import com.easy.query.core.expression.parser.core.available.TableAvailable;
import com.easy.query.core.proxy.AbstractProxyEntity;
import com.easy.query.core.proxy.SQLColumn;
import com.easy.query.core.proxy.SQLSelectAsExpression;
import com.easy.query.core.proxy.fetcher.AbstractFetcher;
import com.easy.query.core.proxy.core.EntitySQLContext;
import com.easy.query.test.mssqlrownumber.entity.MsSQLRowNumberMyTopic;
import com.easy.query.core.proxy.columns.types.SQLStringTypeColumn;
import com.easy.query.core.proxy.columns.types.SQLIntegerTypeColumn;
import com.easy.query.core.proxy.columns.types.SQLLocalDateTimeTypeColumn;

/**
 * this file automatically generated by easy-query, don't modify it
 * 当前文件是easy-query自动生成的请不要随意修改
 * 如果出现属性冲突请使用@ProxyProperty进行重命名
 *
 * @author easy-query
 */
public class MsSQLRowNumberMyTopicProxy extends AbstractProxyEntity<MsSQLRowNumberMyTopicProxy, MsSQLRowNumberMyTopic> {

    private static final Class<MsSQLRowNumberMyTopic> entityClass = MsSQLRowNumberMyTopic.class;

    public static MsSQLRowNumberMyTopicProxy createTable() {
        return new MsSQLRowNumberMyTopicProxy();
    }

    public MsSQLRowNumberMyTopicProxy() {
    }

    /**
     * {@link MsSQLRowNumberMyTopic#getId}
     */
    public SQLStringTypeColumn<MsSQLRowNumberMyTopicProxy> id() {
        return getStringTypeColumn("id");
    }

    /**
     * {@link MsSQLRowNumberMyTopic#getStars}
     */
    public SQLIntegerTypeColumn<MsSQLRowNumberMyTopicProxy> stars() {
        return getIntegerTypeColumn("stars");
    }

    /**
     * {@link MsSQLRowNumberMyTopic#getTitle}
     */
    public SQLStringTypeColumn<MsSQLRowNumberMyTopicProxy> title() {
        return getStringTypeColumn("title");
    }

    /**
     * {@link MsSQLRowNumberMyTopic#getCreateTime}
     */
    public SQLLocalDateTimeTypeColumn<MsSQLRowNumberMyTopicProxy> createTime() {
        return getLocalDateTimeTypeColumn("createTime");
    }


    @Override
    public Class<MsSQLRowNumberMyTopic> getEntityClass() {
        return entityClass;
    }


    /**
     * 数据库列的简单获取
     *
     * @return
     */
    public MsSQLRowNumberMyTopicProxyFetcher FETCHER = new MsSQLRowNumberMyTopicProxyFetcher(this, null, SQLSelectAsExpression.empty);


    public static class MsSQLRowNumberMyTopicProxyFetcher extends AbstractFetcher<MsSQLRowNumberMyTopicProxy, MsSQLRowNumberMyTopic, MsSQLRowNumberMyTopicProxyFetcher> {

        public MsSQLRowNumberMyTopicProxyFetcher(MsSQLRowNumberMyTopicProxy proxy, MsSQLRowNumberMyTopicProxyFetcher prev, SQLSelectAsExpression sqlSelectAsExpression) {
            super(proxy, prev, sqlSelectAsExpression);
        }


        /**
         * {@link MsSQLRowNumberMyTopic#getId}
         */
        public MsSQLRowNumberMyTopicProxyFetcher id() {
            return add(getProxy().id());
        }

        /**
         * {@link MsSQLRowNumberMyTopic#getStars}
         */
        public MsSQLRowNumberMyTopicProxyFetcher stars() {
            return add(getProxy().stars());
        }

        /**
         * {@link MsSQLRowNumberMyTopic#getTitle}
         */
        public MsSQLRowNumberMyTopicProxyFetcher title() {
            return add(getProxy().title());
        }

        /**
         * {@link MsSQLRowNumberMyTopic#getCreateTime}
         */
        public MsSQLRowNumberMyTopicProxyFetcher createTime() {
            return add(getProxy().createTime());
        }


        @Override
        protected MsSQLRowNumberMyTopicProxyFetcher createFetcher(MsSQLRowNumberMyTopicProxy cp, AbstractFetcher<MsSQLRowNumberMyTopicProxy, MsSQLRowNumberMyTopic, MsSQLRowNumberMyTopicProxyFetcher> prev, SQLSelectAsExpression sqlSelectExpression) {
            return new MsSQLRowNumberMyTopicProxyFetcher(cp, this, sqlSelectExpression);
        }
    }

}
