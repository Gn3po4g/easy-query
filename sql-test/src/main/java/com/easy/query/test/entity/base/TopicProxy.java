package com.easy.query.test.entity.base;

import com.easy.query.core.exception.EasyQueryInvalidOperationException;
import com.easy.query.core.expression.parser.core.available.TableAvailable;
import com.easy.query.core.proxy.ProxyEntity;
import com.easy.query.core.proxy.SQLColumn;
import com.easy.query.core.proxy.impl.SQLColumnImpl;
import com.easy.query.test.entity.Topic;

/**
 * this file automatically generated by easy-query, don't modify it
 *
 * @author xuejiaming
 */
public class TopicProxy implements ProxyEntity<TopicProxy, Topic> {

    public static final TopicProxy TOPIC_PROXY = new TopicProxy();
    private static final Class<Topic> entityClass = Topic.class;

    public final SQLColumn<String> id;
    public final SQLColumn<String> title;
    private final TableAvailable table;

    private TopicProxy() {
        this.table = null;
        this.id = null;
        this.title = null;
    }

    public TopicProxy(TableAvailable table) {
        this.table = table;
        this.id = new SQLColumnImpl<>(table, "id");
        this.title = new SQLColumnImpl<>(table, "title");
    }

    @Override
    public TableAvailable getTable() {
        return table;
    }

    @Override
    public Class<Topic> getEntityClass() {
        return entityClass;
    }

    @Override
    public TopicProxy create(TableAvailable table) {
        return new TopicProxy(table);
    }

    @Override
    public Topic createEntity() {
        return new Topic();
    }

    @Override
    public void setValue(Object bean, String property, Object value) {
        Topic topic = (Topic) bean;
        switch (property) {
            case "id":
                topic.setId((String) value);
                break;
            case "title":
                topic.setTitle((String) value);
                break;
        }
        throw new EasyQueryInvalidOperationException("not found property:" + property);
    }

    @Override
    public Object getValue(Object bean, String property) {
        Topic topic = (Topic) bean;
        switch (property) {
            case "id":
                return topic.getId();
            case "title":
                return topic.getTitle();
        }
        throw new EasyQueryInvalidOperationException("not found property:" + property);
    }

//    @Override
//    public PropertyProxy getPropertyProxy(String property) {
//        switch (property){
//            case "id":return new PropertyProxyImpl(this,"id",String.class, StringTypeHandler.INSTANCE,false,null, DefaultValueConverter.INSTANCE);
//            case "title":return new PropertyProxyImpl(this,"title",String.class, StringTypeHandler.INSTANCE,false,null, DefaultValueConverter.INSTANCE);
//        }
//        throw new EasyQueryInvalidOperationException("not found property:"+property);
//    }
}