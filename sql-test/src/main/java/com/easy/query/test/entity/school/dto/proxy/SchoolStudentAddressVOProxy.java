package com.easy.query.test.entity.school.dto.proxy;

import com.easy.query.core.expression.parser.core.available.TableAvailable;
import com.easy.query.core.proxy.AbstractProxyEntity;
import com.easy.query.core.proxy.SQLColumn;
import com.easy.query.core.proxy.SQLSelectAsExpression;
import com.easy.query.core.proxy.fetcher.AbstractFetcher;
import com.easy.query.core.proxy.core.EntitySQLContext;
import com.easy.query.test.entity.school.dto.SchoolStudentAddressVO;
import com.easy.query.core.proxy.columns.types.SQLStringTypeColumn;
import com.easy.query.core.proxy.columns.SQLNavigateColumn;
import com.easy.query.core.proxy.columns.types.SQLAnyTypeColumn;

/**
 * this file automatically generated by easy-query, don't modify it
 * 当前文件是easy-query自动生成的请不要随意修改
 * 如果出现属性冲突请使用@ProxyProperty进行重命名
 *
 * @author easy-query
 */
public class SchoolStudentAddressVOProxy extends AbstractProxyEntity<SchoolStudentAddressVOProxy, SchoolStudentAddressVO> {

    private static final Class<SchoolStudentAddressVO> entityClass = SchoolStudentAddressVO.class;

    public static final SchoolStudentAddressVOProxy TABLE = createTable().createEmpty();

    public static SchoolStudentAddressVOProxy createTable() {
        return new SchoolStudentAddressVOProxy();
    }

    public SchoolStudentAddressVOProxy() {
    }

    /**
     * {@link SchoolStudentAddressVO#getId}
     */
    public SQLStringTypeColumn<SchoolStudentAddressVOProxy> id() {
        return getStringTypeColumn("id");
    }

    /**
     * {@link SchoolStudentAddressVO#getStudentId}
     */
    public SQLStringTypeColumn<SchoolStudentAddressVOProxy> studentId() {
        return getStringTypeColumn("studentId");
    }

    /**
     * {@link SchoolStudentAddressVO#getAddress}
     */
    public SQLStringTypeColumn<SchoolStudentAddressVOProxy> address() {
        return getStringTypeColumn("address");
    }

    /**
     * {@link SchoolStudentAddressVO#getName}
     */
    public SQLStringTypeColumn<SchoolStudentAddressVOProxy> name() {
        return getStringTypeColumn("name");
    }

    /**
     * {@link SchoolStudentAddressVO#getSchoolStudent}
     */
    public com.easy.query.test.entity.school.dto.proxy.SchoolStudentVOProxy schoolStudent() {
        return getNavigate("schoolStudent", new com.easy.query.test.entity.school.dto.proxy.SchoolStudentVOProxy());
    }


    @Override
    public Class<SchoolStudentAddressVO> getEntityClass() {
        return entityClass;
    }


    /**
     * 数据库列的简单获取
     *
     * @return
     */
    public SchoolStudentAddressVOProxyFetcher FETCHER = new SchoolStudentAddressVOProxyFetcher(this, null, SQLSelectAsExpression.empty);


    public static class SchoolStudentAddressVOProxyFetcher extends AbstractFetcher<SchoolStudentAddressVOProxy, SchoolStudentAddressVO, SchoolStudentAddressVOProxyFetcher> {

        public SchoolStudentAddressVOProxyFetcher(SchoolStudentAddressVOProxy proxy, SchoolStudentAddressVOProxyFetcher prev, SQLSelectAsExpression sqlSelectAsExpression) {
            super(proxy, prev, sqlSelectAsExpression);
        }


        /**
         * {@link SchoolStudentAddressVO#getId}
         */
        public SchoolStudentAddressVOProxyFetcher id() {
            return add(getProxy().id());
        }

        /**
         * {@link SchoolStudentAddressVO#getStudentId}
         */
        public SchoolStudentAddressVOProxyFetcher studentId() {
            return add(getProxy().studentId());
        }

        /**
         * {@link SchoolStudentAddressVO#getAddress}
         */
        public SchoolStudentAddressVOProxyFetcher address() {
            return add(getProxy().address());
        }

        /**
         * {@link SchoolStudentAddressVO#getName}
         */
        public SchoolStudentAddressVOProxyFetcher name() {
            return add(getProxy().name());
        }


        @Override
        protected SchoolStudentAddressVOProxyFetcher createFetcher(SchoolStudentAddressVOProxy cp, AbstractFetcher<SchoolStudentAddressVOProxy, SchoolStudentAddressVO, SchoolStudentAddressVOProxyFetcher> prev, SQLSelectAsExpression sqlSelectExpression) {
            return new SchoolStudentAddressVOProxyFetcher(cp, this, sqlSelectExpression);
        }
    }

}
