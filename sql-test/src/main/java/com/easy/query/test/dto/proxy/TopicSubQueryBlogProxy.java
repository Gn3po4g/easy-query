package com.easy.query.test.dto.proxy;

import com.easy.query.core.expression.parser.core.available.TableAvailable;
import com.easy.query.core.proxy.AbstractProxyEntity;
import com.easy.query.core.proxy.SQLColumn;
import com.easy.query.core.proxy.SQLSelectAsExpression;
import com.easy.query.core.proxy.fetcher.AbstractFetcher;
import com.easy.query.core.proxy.core.EntitySQLContext;
import com.easy.query.test.dto.TopicSubQueryBlog;
import com.easy.query.core.proxy.columns.SQLStringColumn;
import com.easy.query.core.proxy.columns.SQLNumberColumn;
import com.easy.query.core.proxy.columns.SQLDateTimeColumn;

/**
 * this file automatically generated by easy-query, don't modify it
 * 当前文件是easy-query自动生成的请不要随意修改
 *
 * @author xuejiaming
 */
public class TopicSubQueryBlogProxy extends AbstractProxyEntity < TopicSubQueryBlogProxy, TopicSubQueryBlog > {

    private static final Class < TopicSubQueryBlog > entityClass = TopicSubQueryBlog .class;

    public static TopicSubQueryBlogProxy createTable () {
        return new TopicSubQueryBlogProxy ();
    }

    public TopicSubQueryBlogProxy () {
    }

    /**
     * {@link TopicSubQueryBlog#getId}
     */
    public SQLStringColumn < TopicSubQueryBlogProxy, java.lang.String> id(){
    return getStringColumn("id", java.lang.String.class);
}

    /**
     * {@link TopicSubQueryBlog#getStars}
     */
    public SQLNumberColumn < TopicSubQueryBlogProxy, java.lang.Integer> stars(){
    return getNumberColumn("stars", java.lang.Integer.class);
}

    /**
     * {@link TopicSubQueryBlog#getTitle}
     */
    public SQLStringColumn < TopicSubQueryBlogProxy, java.lang.String> title(){
    return getStringColumn("title", java.lang.String.class);
}

    /**
     * {@link TopicSubQueryBlog#getCreateTime}
     */
    public SQLDateTimeColumn < TopicSubQueryBlogProxy, java.time.LocalDateTime> createTime(){
    return getDateTimeColumn("createTime", java.time.LocalDateTime.class);
}

    /**
     * {@link TopicSubQueryBlog#getBlogCount}
     */
    public SQLNumberColumn < TopicSubQueryBlogProxy, java.lang.Long> blogCount(){
    return getNumberColumn("blogCount", java.lang.Long.class);
}


    @Override
    public Class < TopicSubQueryBlog > getEntityClass () {
        return entityClass;
    }


    /**
     * 数据库列的简单获取
     * @return
     */
    public TopicSubQueryBlogProxyFetcher FETCHER =
        new TopicSubQueryBlogProxyFetcher (this, null, SQLSelectAsExpression.empty);


    public static class TopicSubQueryBlogProxyFetcher extends AbstractFetcher<TopicSubQueryBlogProxy, TopicSubQueryBlog, TopicSubQueryBlogProxyFetcher> {

        public TopicSubQueryBlogProxyFetcher (TopicSubQueryBlogProxy proxy, TopicSubQueryBlogProxyFetcher prev, SQLSelectAsExpression sqlSelectAsExpression) {
        super(proxy, prev, sqlSelectAsExpression);
    }


        /**
         * {@link TopicSubQueryBlog#getId}
         */
        public TopicSubQueryBlogProxyFetcher id() {
            return add(getProxy().id());
        }

        /**
         * {@link TopicSubQueryBlog#getStars}
         */
        public TopicSubQueryBlogProxyFetcher stars() {
            return add(getProxy().stars());
        }

        /**
         * {@link TopicSubQueryBlog#getTitle}
         */
        public TopicSubQueryBlogProxyFetcher title() {
            return add(getProxy().title());
        }

        /**
         * {@link TopicSubQueryBlog#getCreateTime}
         */
        public TopicSubQueryBlogProxyFetcher createTime() {
            return add(getProxy().createTime());
        }

        /**
         * {@link TopicSubQueryBlog#getBlogCount}
         */
        public TopicSubQueryBlogProxyFetcher blogCount() {
            return add(getProxy().blogCount());
        }


        @Override
        protected TopicSubQueryBlogProxyFetcher createFetcher(
            TopicSubQueryBlogProxy cp,
            AbstractFetcher<TopicSubQueryBlogProxy, TopicSubQueryBlog, TopicSubQueryBlogProxyFetcher> prev,
            SQLSelectAsExpression sqlSelectExpression
        ) {
            return new TopicSubQueryBlogProxyFetcher (cp, this, sqlSelectExpression);
        }
    }

}
