package com.easyquery.springbootdemo.domain.proxy;

import com.easy.query.core.expression.parser.core.available.TableAvailable;
import com.easy.query.core.proxy.AbstractProxyEntity;
import com.easy.query.core.proxy.SQLColumn;
import com.easy.query.core.proxy.SQLSelectAsExpression;
import com.easy.query.core.proxy.fetcher.AbstractFetcher;
import com.easy.query.core.proxy.core.EntitySQLContext;
import com.easyquery.springbootdemo.domain.HelpCityEntity;
import com.easy.query.core.proxy.columns.SQLStringColumn;
import com.easy.query.core.proxy.columns.SQLDateTimeColumn;
import com.easy.query.core.proxy.columns.SQLBooleanColumn;

/**
 * this file automatically generated by easy-query, don't modify it
 * 当前文件是easy-query自动生成的请不要随意修改
 * 如果出现属性冲突请使用@ProxyProperty进行重命名
 *
 * @author xuejiaming
 */
public class HelpCityEntityProxy extends AbstractProxyEntity < HelpCityEntityProxy, HelpCityEntity > {

    private static final Class < HelpCityEntity > entityClass = HelpCityEntity .class;

    public static HelpCityEntityProxy createTable () {
        return new HelpCityEntityProxy ();
    }

    public HelpCityEntityProxy () {
    }

    /**
     * {@link HelpCityEntity#getName}
     */
    public SQLStringColumn < HelpCityEntityProxy, String> name(){
    return getStringColumn("name", String.class);
}

    /**
     * {@link HelpCityEntity#getProvinceName}
     */
    public SQLStringColumn < HelpCityEntityProxy, String> provinceName(){
    return getStringColumn("provinceName", String.class);
}

    /**
     * {@link HelpCityEntity#getProvinceId}
     */
    public SQLStringColumn < HelpCityEntityProxy, String> provinceId(){
    return getStringColumn("provinceId", String.class);
}

    /**
     * {@link HelpCityEntity#getId}
     */
    public SQLStringColumn < HelpCityEntityProxy, String> id(){
    return getStringColumn("id", String.class);
}

    /**
     * 创建时间;创建时间
     * {@link HelpCityEntity#getCreateTime}
     */
    public SQLDateTimeColumn < HelpCityEntityProxy, java.time.LocalDateTime> createTime(){
    return getDateTimeColumn("createTime", java.time.LocalDateTime.class);
}

    /**
     * 修改时间;修改时间
     * {@link HelpCityEntity#getUpdateTime}
     */
    public SQLDateTimeColumn < HelpCityEntityProxy, java.time.LocalDateTime> updateTime(){
    return getDateTimeColumn("updateTime", java.time.LocalDateTime.class);
}

    /**
     * 创建人;创建人
     * {@link HelpCityEntity#getCreateBy}
     */
    public SQLStringColumn < HelpCityEntityProxy, String> createBy(){
    return getStringColumn("createBy", String.class);
}

    /**
     * 修改人;修改人
     * {@link HelpCityEntity#getUpdateBy}
     */
    public SQLStringColumn < HelpCityEntityProxy, String> updateBy(){
    return getStringColumn("updateBy", String.class);
}

    /**
     * 是否删除;是否删除
     * {@link HelpCityEntity#getDeleted}
     */
    public SQLBooleanColumn < HelpCityEntityProxy, Boolean> deleted(){
    return getBooleanColumn("deleted", Boolean.class);
}


    @Override
    public Class < HelpCityEntity > getEntityClass () {
        return entityClass;
    }


    /**
     * 数据库列的简单获取
     * @return
     */
    public HelpCityEntityProxyFetcher FETCHER =
        new HelpCityEntityProxyFetcher (this, null, SQLSelectAsExpression.empty);


    public static class HelpCityEntityProxyFetcher extends AbstractFetcher<HelpCityEntityProxy, HelpCityEntity, HelpCityEntityProxyFetcher> {

        public HelpCityEntityProxyFetcher (HelpCityEntityProxy proxy, HelpCityEntityProxyFetcher prev, SQLSelectAsExpression sqlSelectAsExpression) {
        super(proxy, prev, sqlSelectAsExpression);
    }


        /**
         * {@link HelpCityEntity#getName}
         */
        public HelpCityEntityProxyFetcher name() {
            return add(getProxy().name());
        }

        /**
         * {@link HelpCityEntity#getProvinceName}
         */
        public HelpCityEntityProxyFetcher provinceName() {
            return add(getProxy().provinceName());
        }

        /**
         * {@link HelpCityEntity#getProvinceId}
         */
        public HelpCityEntityProxyFetcher provinceId() {
            return add(getProxy().provinceId());
        }

        /**
         * {@link HelpCityEntity#getId}
         */
        public HelpCityEntityProxyFetcher id() {
            return add(getProxy().id());
        }

        /**
         * 创建时间;创建时间
         * {@link HelpCityEntity#getCreateTime}
         */
        public HelpCityEntityProxyFetcher createTime() {
            return add(getProxy().createTime());
        }

        /**
         * 修改时间;修改时间
         * {@link HelpCityEntity#getUpdateTime}
         */
        public HelpCityEntityProxyFetcher updateTime() {
            return add(getProxy().updateTime());
        }

        /**
         * 创建人;创建人
         * {@link HelpCityEntity#getCreateBy}
         */
        public HelpCityEntityProxyFetcher createBy() {
            return add(getProxy().createBy());
        }

        /**
         * 修改人;修改人
         * {@link HelpCityEntity#getUpdateBy}
         */
        public HelpCityEntityProxyFetcher updateBy() {
            return add(getProxy().updateBy());
        }

        /**
         * 是否删除;是否删除
         * {@link HelpCityEntity#getDeleted}
         */
        public HelpCityEntityProxyFetcher deleted() {
            return add(getProxy().deleted());
        }


        @Override
        protected HelpCityEntityProxyFetcher createFetcher(
            HelpCityEntityProxy cp,
            AbstractFetcher<HelpCityEntityProxy, HelpCityEntity, HelpCityEntityProxyFetcher> prev,
            SQLSelectAsExpression sqlSelectExpression
        ) {
            return new HelpCityEntityProxyFetcher (cp, this, sqlSelectExpression);
        }
    }

}
