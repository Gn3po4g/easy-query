package com.easyquery.springbootdemo.domain.proxy;

import com.easy.query.core.expression.parser.core.available.TableAvailable;
import com.easy.query.core.proxy.AbstractProxyEntity;
import com.easy.query.core.proxy.SQLColumn;
import com.easy.query.core.proxy.SQLSelectAsExpression;
import com.easy.query.core.proxy.fetcher.AbstractFetcher;
import com.easy.query.core.proxy.core.EntitySQLContext;
import com.easyquery.springbootdemo.domain.HelpProvinceEntity;
import com.easy.query.core.proxy.columns.SQLStringColumn;
import com.easy.query.core.proxy.columns.SQLDateTimeColumn;
import com.easy.query.core.proxy.columns.SQLBooleanColumn;

/**
 * this file automatically generated by easy-query, don't modify it
 * 当前文件是easy-query自动生成的请不要随意修改
 * 如果出现属性冲突请使用@ProxyProperty进行重命名
 *
 * @author xuejiaming
 */
public class HelpProvinceEntityProxy extends AbstractProxyEntity < HelpProvinceEntityProxy, HelpProvinceEntity > {

    private static final Class < HelpProvinceEntity > entityClass = HelpProvinceEntity .class;

    public static HelpProvinceEntityProxy createTable () {
        return new HelpProvinceEntityProxy ();
    }

    public HelpProvinceEntityProxy () {
    }

    /**
     * {@link HelpProvinceEntity#getName}
     */
    public SQLStringColumn < HelpProvinceEntityProxy, String> name(){
    return getStringColumn("name", String.class);
}

    /**
     * {@link HelpProvinceEntity#getId}
     */
    public SQLStringColumn < HelpProvinceEntityProxy, String> id(){
    return getStringColumn("id", String.class);
}

    /**
     * 创建时间;创建时间
     * {@link HelpProvinceEntity#getCreateTime}
     */
    public SQLDateTimeColumn < HelpProvinceEntityProxy, java.time.LocalDateTime> createTime(){
    return getDateTimeColumn("createTime", java.time.LocalDateTime.class);
}

    /**
     * 修改时间;修改时间
     * {@link HelpProvinceEntity#getUpdateTime}
     */
    public SQLDateTimeColumn < HelpProvinceEntityProxy, java.time.LocalDateTime> updateTime(){
    return getDateTimeColumn("updateTime", java.time.LocalDateTime.class);
}

    /**
     * 创建人;创建人
     * {@link HelpProvinceEntity#getCreateBy}
     */
    public SQLStringColumn < HelpProvinceEntityProxy, String> createBy(){
    return getStringColumn("createBy", String.class);
}

    /**
     * 修改人;修改人
     * {@link HelpProvinceEntity#getUpdateBy}
     */
    public SQLStringColumn < HelpProvinceEntityProxy, String> updateBy(){
    return getStringColumn("updateBy", String.class);
}

    /**
     * 是否删除;是否删除
     * {@link HelpProvinceEntity#getDeleted}
     */
    public SQLBooleanColumn < HelpProvinceEntityProxy, Boolean> deleted(){
    return getBooleanColumn("deleted", Boolean.class);
}


    @Override
    public Class < HelpProvinceEntity > getEntityClass () {
        return entityClass;
    }


    /**
     * 数据库列的简单获取
     * @return
     */
    public HelpProvinceEntityProxyFetcher FETCHER =
        new HelpProvinceEntityProxyFetcher (this, null, SQLSelectAsExpression.empty);


    public static class HelpProvinceEntityProxyFetcher extends AbstractFetcher<HelpProvinceEntityProxy, HelpProvinceEntity, HelpProvinceEntityProxyFetcher> {

        public HelpProvinceEntityProxyFetcher (HelpProvinceEntityProxy proxy, HelpProvinceEntityProxyFetcher prev, SQLSelectAsExpression sqlSelectAsExpression) {
        super(proxy, prev, sqlSelectAsExpression);
    }


        /**
         * {@link HelpProvinceEntity#getName}
         */
        public HelpProvinceEntityProxyFetcher name() {
            return add(getProxy().name());
        }

        /**
         * {@link HelpProvinceEntity#getId}
         */
        public HelpProvinceEntityProxyFetcher id() {
            return add(getProxy().id());
        }

        /**
         * 创建时间;创建时间
         * {@link HelpProvinceEntity#getCreateTime}
         */
        public HelpProvinceEntityProxyFetcher createTime() {
            return add(getProxy().createTime());
        }

        /**
         * 修改时间;修改时间
         * {@link HelpProvinceEntity#getUpdateTime}
         */
        public HelpProvinceEntityProxyFetcher updateTime() {
            return add(getProxy().updateTime());
        }

        /**
         * 创建人;创建人
         * {@link HelpProvinceEntity#getCreateBy}
         */
        public HelpProvinceEntityProxyFetcher createBy() {
            return add(getProxy().createBy());
        }

        /**
         * 修改人;修改人
         * {@link HelpProvinceEntity#getUpdateBy}
         */
        public HelpProvinceEntityProxyFetcher updateBy() {
            return add(getProxy().updateBy());
        }

        /**
         * 是否删除;是否删除
         * {@link HelpProvinceEntity#getDeleted}
         */
        public HelpProvinceEntityProxyFetcher deleted() {
            return add(getProxy().deleted());
        }


        @Override
        protected HelpProvinceEntityProxyFetcher createFetcher(
            HelpProvinceEntityProxy cp,
            AbstractFetcher<HelpProvinceEntityProxy, HelpProvinceEntity, HelpProvinceEntityProxyFetcher> prev,
            SQLSelectAsExpression sqlSelectExpression
        ) {
            return new HelpProvinceEntityProxyFetcher (cp, this, sqlSelectExpression);
        }
    }

}
